import{_ as h}from"./index-CUjhtEbf.js";import{h as i}from"./Web3Context-BJFNJbWC.js";const u={Y:"year",YY:"year",YYYY:{sectionType:"year",contentType:"digit",maxLength:4},M:{sectionType:"month",contentType:"digit",maxLength:2},MM:"month",MMM:{sectionType:"month",contentType:"letter"},MMMM:{sectionType:"month",contentType:"letter"},D:{sectionType:"day",contentType:"digit",maxLength:2},DD:"day",Do:{sectionType:"day",contentType:"digit-with-letter"},E:{sectionType:"weekDay",contentType:"digit",maxLength:1},e:{sectionType:"weekDay",contentType:"digit",maxLength:1},d:{sectionType:"weekDay",contentType:"digit",maxLength:1},dd:{sectionType:"weekDay",contentType:"letter"},ddd:{sectionType:"weekDay",contentType:"letter"},dddd:{sectionType:"weekDay",contentType:"letter"},A:"meridiem",a:"meridiem",H:{sectionType:"hours",contentType:"digit",maxLength:2},HH:"hours",h:{sectionType:"hours",contentType:"digit",maxLength:2},hh:"hours",m:{sectionType:"minutes",contentType:"digit",maxLength:2},mm:"minutes",s:{sectionType:"seconds",contentType:"digit",maxLength:2},ss:"seconds"},m={year:"YYYY",month:"MMMM",monthShort:"MMM",dayOfMonth:"D",dayOfMonthFull:"Do",weekday:"dddd",weekdayShort:"ddd",hours24h:"HH",hours12h:"hh",meridiem:"A",minutes:"mm",seconds:"ss",fullDate:"ll",keyboardDate:"L",shortDate:"MMM D",normalDate:"D MMMM",normalDateWithWeekday:"ddd, MMM D",fullTime12h:"hh:mm A",fullTime24h:"HH:mm",keyboardDateTime12h:"L hh:mm A",keyboardDateTime24h:"L HH:mm"},d=["Missing timezone plugin","To be able to use timezones, you have to pass the default export from `moment-timezone` to the `dateLibInstance` prop of `LocalizationProvider`","Find more information on https://mui.com/x/react-date-pickers/timezone/#moment-and-timezone"].join(`
`);class g{isMUIAdapter=!0;isTimezoneCompatible=!0;lib="moment";escapedCharacters={start:"[",end:"]"};formatTokenMap=u;constructor({locale:e,formats:t,instance:r}={}){this.moment=r||i,this.locale=e,this.formats=h({},m,t)}setLocaleToValue=e=>{const t=this.getCurrentLocaleCode();return t===e.locale()?e:e.locale(t)};hasTimezonePlugin=()=>typeof this.moment.tz<"u";createSystemDate=e=>{const t=this.moment(e).local();return this.locale===void 0?t:t.locale(this.locale)};createUTCDate=e=>{const t=this.moment.utc(e);return this.locale===void 0?t:t.locale(this.locale)};createTZDate=(e,t)=>{if(!this.hasTimezonePlugin())throw new Error(d);const r=t==="default"?this.moment(e):this.moment.tz(e,t);return this.locale===void 0?r:r.locale(this.locale)};date=(e,t="default")=>e===null?null:t==="UTC"?this.createUTCDate(e):t==="system"||t==="default"&&!this.hasTimezonePlugin()?this.createSystemDate(e):this.createTZDate(e,t);getInvalidDate=()=>this.moment(new Date("Invalid Date"));getTimezone=e=>{const t=e._z?.name,r=e.isUTC()?"UTC":"system";return t??this.moment.defaultZone?.name??r};setTimezone=(e,t)=>{if(this.getTimezone(e)===t)return e;if(t==="UTC")return e.clone().utc();if(t==="system")return e.clone().local();if(!this.hasTimezonePlugin()){if(t!=="default")throw new Error(d);return e}const r=t==="default"?this.moment.defaultZone?.name??"system":t;if(r==="system")return e.clone().local();const s=e.clone();return s.tz(r),s};toJsDate=e=>e.toDate();parse=(e,t)=>e===""?null:this.locale?this.moment(e,t,this.locale,!0):this.moment(e,t,!0);getCurrentLocaleCode=()=>this.locale||i.locale();is12HourCycleInCurrentLocale=()=>/A|a/.test(i.localeData(this.getCurrentLocaleCode()).longDateFormat("LT"));expandFormat=e=>{const t=/(\[[^[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})|./g;return e.match(t).map(r=>{const s=r[0];return s==="L"||s===";"?i.localeData(this.getCurrentLocaleCode()).longDateFormat(r):r}).join("")};isValid=e=>e==null?!1:e.isValid();format=(e,t)=>this.formatByString(e,this.formats[t]);formatByString=(e,t)=>{const r=e.clone();return r.locale(this.getCurrentLocaleCode()),r.format(t)};formatNumber=e=>e;isEqual=(e,t)=>e===null&&t===null?!0:e===null||t===null?!1:e.isSame(t);isSameYear=(e,t)=>e.isSame(t,"year");isSameMonth=(e,t)=>e.isSame(t,"month");isSameDay=(e,t)=>e.isSame(t,"day");isSameHour=(e,t)=>e.isSame(t,"hour");isAfter=(e,t)=>e.isAfter(t);isAfterYear=(e,t)=>e.isAfter(t,"year");isAfterDay=(e,t)=>e.isAfter(t,"day");isBefore=(e,t)=>e.isBefore(t);isBeforeYear=(e,t)=>e.isBefore(t,"year");isBeforeDay=(e,t)=>e.isBefore(t,"day");isWithinRange=(e,[t,r])=>e.isBetween(t,r,null,"[]");startOfYear=e=>e.clone().startOf("year");startOfMonth=e=>e.clone().startOf("month");startOfWeek=e=>this.setLocaleToValue(e.clone()).startOf("week");startOfDay=e=>e.clone().startOf("day");endOfYear=e=>e.clone().endOf("year");endOfMonth=e=>e.clone().endOf("month");endOfWeek=e=>this.setLocaleToValue(e.clone()).endOf("week");endOfDay=e=>e.clone().endOf("day");addYears=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"years"):e.clone().add(t,"years");addMonths=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"months"):e.clone().add(t,"months");addWeeks=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"weeks"):e.clone().add(t,"weeks");addDays=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"days"):e.clone().add(t,"days");addHours=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"hours"):e.clone().add(t,"hours");addMinutes=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"minutes"):e.clone().add(t,"minutes");addSeconds=(e,t)=>t<0?e.clone().subtract(Math.abs(t),"seconds"):e.clone().add(t,"seconds");getYear=e=>e.get("year");getMonth=e=>e.get("month");getDate=e=>e.get("date");getHours=e=>e.get("hours");getMinutes=e=>e.get("minutes");getSeconds=e=>e.get("seconds");getMilliseconds=e=>e.get("milliseconds");setYear=(e,t)=>e.clone().year(t);setMonth=(e,t)=>e.clone().month(t);setDate=(e,t)=>e.clone().date(t);setHours=(e,t)=>e.clone().hours(t);setMinutes=(e,t)=>e.clone().minutes(t);setSeconds=(e,t)=>e.clone().seconds(t);setMilliseconds=(e,t)=>e.clone().milliseconds(t);getDaysInMonth=e=>e.daysInMonth();getWeekArray=e=>{const t=this.startOfWeek(this.startOfMonth(e)),r=this.endOfWeek(this.endOfMonth(e));let s=0,n=t,o=n.get("dayOfYear");const a=[];for(;n.isBefore(r);){const c=Math.floor(s/7);a[c]=a[c]||[],a[c].push(n);const l=o;n=this.addDays(n,1),o=n.get("dayOfYear"),l===o&&(n=n.add(12,"h").startOf("day")),s+=1}return a};getWeekNumber=e=>e.week();getDayOfWeek=e=>e.day()+1;getYearRange([e,t]){const r=this.startOfYear(e),s=this.endOfYear(t),n=[];let o=r;for(;this.isBefore(o,s);)n.push(o),o=this.addYears(o,1);return n}}export{g as AdapterMoment};
